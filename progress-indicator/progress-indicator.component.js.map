{"version":3,"file":"progress-indicator.component.js","sourceRoot":"","sources":["../src/progress-indicator/progress-indicator.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAE/D;IA4FC,2BAAsB,YAAiC;QAAjC,iBAAY,GAAZ,YAAY,CAAqB;QAlC9C,UAAK,GAAG,EAAE,CAAC;QACX,gBAAW,GAA8B,YAAY,CAAC;QACtD,aAAQ,GAAG,KAAK,CAAC;IAgCgC,CAAC;IA3CpD,+BAAa,GAApB,UAAqB,SAAiB;QACrC,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YACnC,KAAK,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,CAAC,YAAY,CAAC,EAAC,CAAC,CAAC;SACtC;QAED,OAAO,KAAK,CAAC;IACd,CAAC;IAMD,sBAAa,sCAAO;aAApB;YACC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS,EAA3B,CAA2B,CAAC,CAAC;QAChE,CAAC;aACD,UAAY,OAAe;YAC1B,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,GAAG,CAAC,EAAE;gBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC3C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;iBACtC;gBACD,OAAO;aACP;YAED,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC3C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;iBACpC;gBACD,OAAO;aACP;YACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;YACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;gBACjC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;aACpC;YACD,KAAK,IAAI,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;aACtC;QACF,CAAC;;;OAtBA;IAwBD,sBAAI,6CAAc;aAAlB;YACC,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC;QACzC,CAAC;;;OAAA;;gBA1FD,SAAS,SAAC;oBACV,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,k2DA4CT;iBACD;;;;gBAjDQ,mBAAmB;;;wBA4D1B,KAAK;8BACL,KAAK;2BACL,KAAK;0BAEL,KAAK;;IA+BP,wBAAC;CAAA,AA7FD,IA6FC;SA7CY,iBAAiB","sourcesContent":["import { Component, Input } from \"@angular/core\";\nimport { ExperimentalService } from \"./../experimental.module\";\n\n@Component({\n\tselector: \"ibm-progress-indicator\",\n\ttemplate: `\n\t<ul\n\t\tdata-progress\n\t\tdata-progress-current\n\t\tclass=\"bx--progress\"\n\t\t[ngClass]=\"{\n\t\t\t'bx--skeleton': skeleton,\n\t\t\t'bx--progress--vertical': (orientation === 'vertical')\n\t\t}\">\n\t\t<li\n\t\tclass=\"bx--progress-step bx--progress-step--{{step.state}}\"\n\t\t*ngFor=\"let step of steps; let i = index\">\n\t\t\t<svg *ngIf=\"step.state == 'complete'\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n\t\t\t\t<g fill-rule=\"nonzero\">\n\t\t\t\t\t<path d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z\"/>\n\t\t\t\t\t<path d=\"M11.646 5.146l.708.708-5.604 5.603-3.104-3.103.708-.708 2.396 2.397z\"/>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t\t<svg *ngIf=\"step.state == 'current'\">\n\t\t\t\t<!-- old icon -->\n\t\t\t\t<g *ngIf=\"!isExperimental\">\n\t\t\t\t\t<circle cx=\"12\" cy=\"12\" r=\"12\"></circle>\n\t\t\t\t\t<circle cx=\"12\" cy=\"12\" r=\"6\"></circle>\n\t\t\t\t</g>\n\t\t\t\t<!-- new icon -->\n\t\t\t\t<path *ngIf=\"isExperimental\" d=\"M 7, 7 m -7, 0 a 7,7 0 1,0 14,0 a 7,7 0 1,0 -14,0\" ></path>\n\t\t\t</svg>\n\t\t\t<svg *ngIf=\"step.state == 'incomplete'\">\n\t\t\t\t<!-- old icon -->\n\t\t\t\t<circle *ngIf=\"!isExperimental\" cx=\"12\" cy=\"12\" r=\"12\"></circle>\n\t\t\t\t<!-- new icon -->\n\t\t\t\t<path\n\t\t\t\t\t*ngIf=\"isExperimental\"\n\t\t\t\t\td=\"M8 1C4.1 1 1 4.1 1 8s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7zm0 13c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6z\">\n\t\t\t\t</path>\n\t\t\t</svg>\n\t\t\t<svg *ngIf=\"step.state == 'error'\">\n\t\t\t\t<path d=\"M8 1C4.1 1 1 4.1 1 8s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7zm0 13c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6z\"></path>\n\t\t\t\t<path d=\"M7.5 4h1v5h-1zm.5 6.2c-.4 0-.8.3-.8.8s.3.8.8.8c.4 0 .8-.3.8-.8s-.4-.8-.8-.8z\"></path>\n\t\t\t</svg>\n\t\t\t<p class=\"bx--progress-label\">{{step.text}}</p>\n\t\t\t<span class=\"bx--progress-line\"></span>\n\t\t</li>\n\t</ul>\n\t`\n})\nexport class ProgressIndicator {\n\tstatic skeletonSteps(stepCount: number) {\n\t\tconst steps = [];\n\t\tfor (let i = 0; i < stepCount; i++) {\n\t\t\tsteps.push({\"state\": [\"incomplete\"]});\n\t\t}\n\n\t\treturn steps;\n\t}\n\n\t@Input() steps = [];\n\t@Input() orientation: \"horizontal\" | \"vertical\" = \"horizontal\";\n\t@Input() skeleton = false;\n\n\t@Input() get current() {\n\t\treturn this.steps.indexOf(step => step.state[0] === \"current\");\n\t}\n\tset current(current: number) {\n\t\tif (current === undefined || current < 0) {\n\t\t\tfor (let i = 0; i < this.steps.length; i++) {\n\t\t\t\tthis.steps[i].state[0] = \"incomplete\";\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (current > this.steps.length - 1) {\n\t\t\tfor (let i = 0; i < this.steps.length; i++) {\n\t\t\t\tthis.steps[i].state[0] = \"complete\";\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis.steps[current].state[0] = \"current\";\n\t\tfor (let i = 0; i < current; i++) {\n\t\t\tthis.steps[i].state[0] = \"complete\";\n\t\t}\n\t\tfor (let i = current + 1; i < this.steps.length; i++) {\n\t\t\tthis.steps[i].state[0] = \"incomplete\";\n\t\t}\n\t}\n\n\tget isExperimental() {\n\t\treturn this.experimental.isExperimental;\n\t}\n\n\tconstructor(protected experimental: ExperimentalService) {}\n}\n"]}